"""Presentation management routes for DNB Presentation Generator."""

from typing import List, Optional
from fastapi import APIRouter, HTTPException, Response
from fastapi.responses import FileResponse
from pydantic import BaseModel
from datetime import datetime
import os
from pathlib import Path

router = APIRouter()


class PresentationInfo(BaseModel):
    """Information about a presentation."""
    id: str
    title: str
    status: str
    created_at: datetime
    file_size: Optional[int] = None
    download_count: int = 0


@router.get("/", response_model=List[PresentationInfo])
async def list_presentations():
    """List all generated presentations."""
    # Mock data - in production this would query the database
    mock_presentations = [
        PresentationInfo(
            id="example-1",
            title="Sample DNB Presentation",
            status="completed",
            created_at=datetime.now(),
            file_size=2048000,
            download_count=5
        )
    ]
    return mock_presentations


@router.get("/{presentation_id}")
async def get_presentation(presentation_id: str):
    """Get detailed information about a specific presentation."""
    return {
        "id": presentation_id,
        "title": "Mock Presentation",
        "status": "completed",
        "created_at": datetime.now().isoformat(),
        "slides_count": 10,
        "template": "corporate",
        "file_size": 2048000
    }


@router.get("/{presentation_id}/download")
async def download_presentation(presentation_id: str):
    """Download a generated presentation file."""
    try:
        # For demo purposes, create a simple text file
        # In production, this would serve the actual PowerPoint file
        mock_content = f"""
DNB Presentation Generator - Demo File
=====================================

Presentation ID: {presentation_id}
Generated at: {datetime.now().isoformat()}

This is a demonstration file. In the full implementation, 
this would be a PowerPoint (.pptx) file generated by the 
AI agents based on your input.

Features included:
- Multi-agent AI content generation
- DNB brand compliance
- Professional templates
- Automated chart creation
- Quality assurance validation

Thank you for using DNB Presentation Generator!
        """
        
        # Create a temporary file for download
        temp_dir = Path("temp_downloads")
        temp_dir.mkdir(exist_ok=True)
        
        filename = f"dnb_presentation_{presentation_id}.txt"
        file_path = temp_dir / filename
        
        with open(file_path, "w", encoding="utf-8") as f:
            f.write(mock_content.strip())
        
        return FileResponse(
            path=str(file_path),
            filename=filename,
            media_type="text/plain"
        )
        
    except Exception as e:
        raise HTTPException(
            status_code=500,
            detail=f"Failed to download presentation: {str(e)}"
        )


@router.delete("/{presentation_id}")
async def delete_presentation(presentation_id: str):
    """Delete a presentation and its associated files."""
    return {
        "id": presentation_id,
        "status": "deleted",
        "message": "Presentation deleted successfully"
    }
